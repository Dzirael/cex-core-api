// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package sqlc

import (
	"context"

	"cex-core-api/app/internal/models"
	"cex-core-api/app/internal/models/credentials"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

type Querier interface {
	CreateAccount(ctx context.Context, arg CreateAccountParams) error
	CreateBalanceTransfer(ctx context.Context, arg CreateBalanceTransferParams) error
	CreateChain(ctx context.Context, chainID uuid.UUID, name string) error
	CreateCredential(ctx context.Context, arg CreateCredentialParams) error
	CreateToken(ctx context.Context, arg CreateTokenParams) error
	CreateTokenChains(ctx context.Context, tokenID uuid.UUID, chainIds []uuid.UUID) error
	CreateUser(ctx context.Context, arg CreateUserParams) error
	DecreaseAccountBalance(ctx context.Context, arg DecreaseAccountBalanceParams) (DecreaseAccountBalanceRow, error)
	DecreaseAccountLockedBalance(ctx context.Context, amount decimal.Decimal, balanceID uuid.UUID) error
	DeleteCredential(ctx context.Context, credentialID uuid.UUID) error
	DeleteUser(ctx context.Context, userID uuid.UUID) error
	GetAccountByID(ctx context.Context, accountID uuid.UUID) (Account, error)
	GetAccountsByUserID(ctx context.Context, userID uuid.UUID) ([]Account, error)
	GetBalanceChangeByID(ctx context.Context, changeID uuid.UUID) (AccountBalanceChange, error)
	GetBalanceChanges(ctx context.Context, arg GetBalanceChangesParams) ([]AccountBalanceChange, error)
	GetChainByID(ctx context.Context, chainID uuid.UUID) (Chain, error)
	GetChains(ctx context.Context, offset int32, limit int32) ([]Chain, error)
	GetCredentialByID(ctx context.Context, credentialID uuid.UUID) (Credential, error)
	GetSupportedTokens(ctx context.Context, arg GetSupportedTokensParams) ([]GetSupportedTokensRow, error)
	GetTokenBalanceByAccountID(ctx context.Context, arg GetTokenBalanceByAccountIDParams) ([]GetTokenBalanceByAccountIDRow, error)
	GetTokenByID(ctx context.Context, tokenID uuid.UUID) (Token, error)
	GetTokenBySymbol(ctx context.Context, symbol string) (Token, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, userID uuid.UUID) (User, error)
	GetUserCredentialByType(ctx context.Context, type_ credentials.Type, userID uuid.UUID) (Credential, error)
	GetUserCredentials(ctx context.Context, userID uuid.UUID) ([]Credential, error)
	IncreaseAccountBalance(ctx context.Context, arg IncreaseAccountBalanceParams) (uuid.UUID, error)
	UpdateBalanceTransferStatus(ctx context.Context, status models.ChangeStatus, changeID uuid.UUID) error
	UpdateCredentialSecret(ctx context.Context, secretData []byte, type_ credentials.Type) (Credential, error)
	VerifyCredential(ctx context.Context, credentialID uuid.UUID) error
}

var _ Querier = (*Queries)(nil)
