// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: crypto/v1/requests.proto

package crypto_v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSupportedChainsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       *string                `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
	Limit         *uint32                `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"` // max 100
	Offset        *uint32                `protobuf:"varint,4,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedChainsRequest) Reset() {
	*x = GetSupportedChainsRequest{}
	mi := &file_crypto_v1_requests_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedChainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedChainsRequest) ProtoMessage() {}

func (x *GetSupportedChainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_v1_requests_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedChainsRequest.ProtoReflect.Descriptor instead.
func (*GetSupportedChainsRequest) Descriptor() ([]byte, []int) {
	return file_crypto_v1_requests_proto_rawDescGZIP(), []int{0}
}

func (x *GetSupportedChainsRequest) GetChainId() string {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return ""
}

func (x *GetSupportedChainsRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetSupportedChainsRequest) GetOffset() uint32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type GetSupportedTokensRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       *string                `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
	Limit         *uint32                `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"` // max 100
	Offset        *uint32                `protobuf:"varint,3,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedTokensRequest) Reset() {
	*x = GetSupportedTokensRequest{}
	mi := &file_crypto_v1_requests_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedTokensRequest) ProtoMessage() {}

func (x *GetSupportedTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_v1_requests_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedTokensRequest.ProtoReflect.Descriptor instead.
func (*GetSupportedTokensRequest) Descriptor() ([]byte, []int) {
	return file_crypto_v1_requests_proto_rawDescGZIP(), []int{1}
}

func (x *GetSupportedTokensRequest) GetChainId() string {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return ""
}

func (x *GetSupportedTokensRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetSupportedTokensRequest) GetOffset() uint32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

var File_crypto_v1_requests_proto protoreflect.FileDescriptor

const file_crypto_v1_requests_proto_rawDesc = "" +
	"\n" +
	"\x18crypto/v1/requests.proto\x12\tcrypto.v1\x1a\x17validate/validate.proto\"\xbe\x01\n" +
	"\x19GetSupportedChainsRequest\x12:\n" +
	"\bchain_id\x18\x01 \x01(\tB\x1a\xfaB\x17r\x15R\x03evmR\x06solanaR\x03btc\xd0\x01\x01H\x00R\achainId\x88\x01\x01\x12&\n" +
	"\x05limit\x18\x03 \x01(\rB\v\xfaB\b*\x06\x18d(\x01@\x01H\x01R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\x04 \x01(\rH\x02R\x06offset\x88\x01\x01B\v\n" +
	"\t_chain_idB\b\n" +
	"\x06_limitB\t\n" +
	"\a_offset\"\xaf\x01\n" +
	"\x19GetSupportedTokensRequest\x12+\n" +
	"\bchain_id\x18\x01 \x01(\tB\v\xfaB\br\x06\xd0\x01\x01\xb0\x01\x01H\x00R\achainId\x88\x01\x01\x12&\n" +
	"\x05limit\x18\x02 \x01(\rB\v\xfaB\b*\x06\x18d(\x01@\x01H\x01R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\x03 \x01(\rH\x02R\x06offset\x88\x01\x01B\v\n" +
	"\t_chain_idB\b\n" +
	"\x06_limitB\t\n" +
	"\a_offsetB\x89\x01\n" +
	"\rcom.crypto.v1B\rRequestsProtoP\x01Z$cex-core-api/gen/crypto/v1;crypto_v1\xa2\x02\x03CXX\xaa\x02\tCrypto.V1\xca\x02\tCrypto\\V1\xe2\x02\x15Crypto\\V1\\GPBMetadata\xea\x02\n" +
	"Crypto::V1b\x06proto3"

var (
	file_crypto_v1_requests_proto_rawDescOnce sync.Once
	file_crypto_v1_requests_proto_rawDescData []byte
)

func file_crypto_v1_requests_proto_rawDescGZIP() []byte {
	file_crypto_v1_requests_proto_rawDescOnce.Do(func() {
		file_crypto_v1_requests_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_crypto_v1_requests_proto_rawDesc), len(file_crypto_v1_requests_proto_rawDesc)))
	})
	return file_crypto_v1_requests_proto_rawDescData
}

var file_crypto_v1_requests_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_crypto_v1_requests_proto_goTypes = []any{
	(*GetSupportedChainsRequest)(nil), // 0: crypto.v1.GetSupportedChainsRequest
	(*GetSupportedTokensRequest)(nil), // 1: crypto.v1.GetSupportedTokensRequest
}
var file_crypto_v1_requests_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_crypto_v1_requests_proto_init() }
func file_crypto_v1_requests_proto_init() {
	if File_crypto_v1_requests_proto != nil {
		return
	}
	file_crypto_v1_requests_proto_msgTypes[0].OneofWrappers = []any{}
	file_crypto_v1_requests_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_crypto_v1_requests_proto_rawDesc), len(file_crypto_v1_requests_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_crypto_v1_requests_proto_goTypes,
		DependencyIndexes: file_crypto_v1_requests_proto_depIdxs,
		MessageInfos:      file_crypto_v1_requests_proto_msgTypes,
	}.Build()
	File_crypto_v1_requests_proto = out.File
	file_crypto_v1_requests_proto_goTypes = nil
	file_crypto_v1_requests_proto_depIdxs = nil
}
